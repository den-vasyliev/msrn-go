apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
  name: msrn-api
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: msrn-api
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: msrn-api
        version: v3.5.1
    spec:
      containers:
      - env:
        - name: APP_PORT
          value: "80"
        - name: APP_REDIS_SERVER
          value: redis.db.svc.cluster.local
        - name: APP_REDIS_PORT
          value: "6379"
        - name: APP_RMQ_SERVER
          value: rmq-rabbitmq-ha.rmq.svc.cluster.local
        - name: APP_RMQ_CHANNEL
          value: "signaing"
        - name: RABBITMQ_DEFAULT_USER
          value: "guest"
        - name: RABBITMQ_DEFAULT_PASS
          value: "guest"
        - name: APP_PN_CHANNEL
          value: "channel-mapbox"
        image: msrn/api:v3.5.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 80
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        name: main
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readinez
            port: 80
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name:  msrn-api
      prefix: /api/
      service: msrn-api
  creationTimestamp: null
  labels:
    app: msrn-api
  name: msrn-api
spec:
  ports:
  - name: msrn-api
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: msrn-api
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}